kind: pipeline
type: docker
name: commune-page

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/commune-page
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=commune-page

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: commune-page
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      - release_name=$( [ "$env_name" = "prod" ] && echo "$APP_NAME" || echo "$env_name""-""$APP_NAME" )
      # Install application chart
      - >-
        helm upgrade --install "$release_name" -n commune-"$env_name"-web-apps
        -f values.yaml -f apps/"$APP_NAME"/values.yaml
        -f apps/"$APP_NAME"/values."$env_name".yaml
        --set deployment.image.tag="$COMMIT_SHORT_SHA"
        --wait renlabs/application

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/commune-governance/**
      - apps/commune-validator/**
      - apps/communex-page/**
      - apps/commune-worker/**
      - apps/sample-app/**
      - apps/commune-wallet/**
      - apps/commune-cache/**
---
kind: pipeline
type: docker
name: community-validator

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/community-validator
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=commune-validator

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: commune-validator
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      - release_name=$( [ "$env_name" = "prod" ] && echo "$APP_NAME" || echo "$env_name""-""$APP_NAME" )
      # Install application chart
      - >-
        helm upgrade --install "$release_name" -n commune-"$env_name"-web-apps
        -f values.yaml -f apps/"$APP_NAME"/values.yaml
        -f apps/"$APP_NAME"/values."$env_name".yaml
        --set deployment.image.tag="$COMMIT_SHORT_SHA"
        --wait renlabs/application

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/commune-worker/**
      - apps/commune-governance/**
      - apps/commune-page/**
      - apps/communex-page/**
      - apps/sample-app/**
      - apps/commune-wallet/**
      - apps/commune-cache/**
---
kind: pipeline
type: docker
name: commune-worker

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/commune-worker
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=commune-worker

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: commune-worker
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      - release_name=$( [ "$env_name" = "prod" ] && echo "$APP_NAME" || echo "$env_name""-""$APP_NAME" )
      # Install application chart
      - >-
        helm upgrade --install "$release_name" -n commune-"$env_name"-web-apps
        -f values.yaml -f apps/"$APP_NAME"/values.yaml
        -f apps/"$APP_NAME"/values."$env_name".yaml
        --set deployment.image.tag="$COMMIT_SHORT_SHA"
        --wait renlabs/application

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/commune-validator/**
      - apps/commune-governance/**
      - apps/commune-page/**
      - apps/communex-page/**
      - apps/sample-app/**
      - apps/commune-wallet/**
      - apps/commune-cache/**
---
kind: pipeline
type: docker
name: commune-governance

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/commune-governance
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=commune-governance

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: commune-governance
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      - release_name=$( [ "$env_name" = "prod" ] && echo "$APP_NAME" || echo "$env_name""-""$APP_NAME" )
      # Install application chart
      - >-
        helm upgrade --install "$release_name" -n commune-"$env_name"-web-apps
        -f values.yaml -f apps/"$APP_NAME"/values.yaml
        -f apps/"$APP_NAME"/values."$env_name".yaml
        --set deployment.image.tag="$COMMIT_SHORT_SHA"
        --wait renlabs/application

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/commune-page/**
      - apps/commune-validator/**
      - apps/communex-page/**
      - apps/commune-worker/**
      - apps/sample-app/**
      - apps/commune-wallet/**
      - apps/commune-cache/**
---
kind: pipeline
type: docker
name: commune-wallet

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/commune-wallet
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=commune-wallet

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: commune-wallet
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      - release_name=$( [ "$env_name" = "prod" ] && echo "$APP_NAME" || echo "$env_name""-""$APP_NAME" )
      # Install application chart
      - >-
        helm upgrade --install "$release_name" -n commune-"$env_name"-web-apps
        -f values.yaml -f apps/"$APP_NAME"/values.yaml
        -f apps/"$APP_NAME"/values."$env_name".yaml
        --set deployment.image.tag="$COMMIT_SHORT_SHA"
        --wait renlabs/application

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/commune-page/**
      - apps/commune-validator/**
      - apps/communex-page/**
      - apps/commune-worker/**
      - apps/sample-app/**
      - apps/commune-governance/**
      - apps/commune-cache/**
---
kind: pipeline
type: docker
name: commune-cache

steps:
  - name: build
    image: plugins/docker
    settings:
      registry: ghcr.io
      username: ${DRONE_COMMIT_AUTHOR}
      password:
        from_secret: DOCKER_TOKEN
      repo: ghcr.io/renlabs-dev/commune-cache
      tags:
        - latest
        - ${DRONE_BRANCH}
        - ${DRONE_COMMIT_SHA:0:7}
      dockerfile: docker/Dockerfile
      build_args: APP_NAME=commune-cache

  - name: deploy
    image: ghcr.io/renlabs-dev/devops-ci:latest
    environment:
      VAULT_ADDR:
        from_secret: VAULT_ADDR
      VAULT_ROLE_ID:
        from_secret: VAULT_ROLE_ID
      VAULT_SECRET_ID:
        from_secret: VAULT_SECRET_ID
      APP_NAME: commune-cache
    commands:
      # Download helm chart and authenticate to Kubernetes
      - /apps/k8s_auth_w_approle.sh
      - helm repo add renlabs https://charts.renlabs.dev/
      - helm repo update
      # Set auxiliary environment variables
      - export COMMIT_SHORT_SHA=${DRONE_COMMIT_SHA:0:7}
      - env_name=$( [ "$DRONE_BRANCH" = "main" ] && echo "prod" || echo "dev" )
      - release_name=$( [ "$env_name" = "prod" ] && echo "$APP_NAME" || echo "$env_name""-""$APP_NAME" )
      # Install application chart
      - >-
        helm upgrade --install "$release_name" -n commune-"$env_name"-web-apps
        -f values.yaml -f apps/"$APP_NAME"/values.yaml
        -f apps/"$APP_NAME"/values."$env_name".yaml
        --set deployment.image.tag="$COMMIT_SHORT_SHA"
        --wait renlabs/application

trigger:
  branch:
    - drone
    - main
    - dev
  event:
    - push
  paths:
    exclude:
      - apps/commune-page/**
      - apps/commune-validator/**
      - apps/communex-page/**
      - apps/commune-worker/**
      - apps/sample-app/**
      - apps/commune-governance/**
      - apps/commune-wallet/**
